{"ast":null,"code":"var _jsxFileName = \"/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nimport defaultDataset from \"./dataset\"; //データベースの値をこちらでインポートする\n// クラスコンポーネントで一度作成する\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initAnswer = () => {\n      const initDataset = this.state.defaultDataset[this.state.currentID]; //初期値のオブジェクト取得\n\n      const initAnswer = initDataset.answers; // オブジェクト配列が格納されている\n\n      this.setState({\n        answers: initAnswer\n      });\n      console.log(this.state.answers);\n    };\n\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: defaultDataset\n    };\n  } // 初期の回答と質問を入力するメソットを作成する\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","defaultDataset","App","Component","constructor","props","initAnswer","initDataset","state","currentID","answers","setState","console","log","chats","dataset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAO,WAAP;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,oBAAjC;AACA,OAAOC,cAAP,MAA2B,WAA3B,C,CAAuC;AAGvC;;AACA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWjBC,UAXiB,GAWJ,MAAM;AAChB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWP,cAAX,CAA0B,KAAKO,KAAL,CAAWC,SAArC,CAApB,CADgB,CACqD;;AACrE,YAAMH,UAAU,GAAGC,WAAW,CAACG,OAA/B,CAFgB,CAEwB;;AACxC,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAEJ;AADG,OAAd;AAIAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,OAAvB;AACH,KAnBiB;;AAEd,SAAKF,KAAL,GAAa;AACXE,MAAAA,OAAO,EAAE,EADE;AAEXI,MAAAA,KAAK,EAAE,EAFI;AAGXL,MAAAA,SAAS,EAAE,MAHA;AAIXM,MAAAA,OAAO,EAAEd;AAJE,KAAb;AAMH,GATwC,CAWzC;;;AAcAe,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWM,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQH;;AAlCwC","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\nimport defaultDataset from \"./dataset\" //データベースの値をこちらでインポートする\n\n\n// クラスコンポーネントで一度作成する\nexport default class App extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {\n              answers: [],\n              chats: [],\n              currentID: \"init\",\n              dataset: defaultDataset, \n            };\n        }\n\n        // 初期の回答と質問を入力するメソットを作成する\n         initAnswer = () => { \n            const initDataset = this.state.defaultDataset[this.state.currentID]; //初期値のオブジェクト取得\n            const initAnswer = initDataset.answers; // オブジェクト配列が格納されている\n            this.setState({\n              answers: initAnswer\n            });\n\n            console.log(this.state.answers);\n        }\n\n       \n\n\n        render(){\n            return (\n              <section className=\"c-section\">\n                <div className=\"c-box\">\n                  <Chats chats={this.state.chats} />\n                  <AnswersList answers={this.state.answers} />\n                </div>\n              </section>\n            );\n        }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}