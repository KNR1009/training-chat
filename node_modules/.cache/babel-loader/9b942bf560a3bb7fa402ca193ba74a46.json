{"ast":null,"code":"var _jsxFileName = \"/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nimport defaultDataset from \"./dataset\"; //データベースの値をこちらでインポートする\n// クラスコンポーネントで一度作成する\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayNextQuestion = nextQuestionId => {\n      const initDataset = this.state.dataset[nextQuestionId];\n      const question = initDataset.question;\n      const chat = {\n        text: question,\n        type: \"question\"\n      };\n      const chats = this.state.chats;\n      chats.push(chat);\n      this.setState({\n        chats: chats,\n        answers: initDataset.answers,\n        currentID: nextQuestionId\n      });\n    };\n\n    this.selectAnswer = (selectAnswer, nextQuestionId) => {\n      // 選択肢は複数あるので、switch文での記述を行う\n      switch (true) {\n        case nextQuestionId === \"init\":\n          this.displayNextQuestion(nextQuestionId);\n          break;\n        // initのだった場合の処理を記述する\n\n        default:\n          // クリックされた値をchatsに追加する\n          const chat = {\n            text: selectAnswer,\n            type: \"answer\"\n          };\n          const chats = this.state.chats;\n          chats.push(chat);\n          this.setState({\n            chats: chats\n          }); // 次の質問文をchatsに追加する(メソットの呼び出し)\n\n          this.displayNextQuestion(nextQuestionId);\n          break;\n      }\n    };\n\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: defaultDataset\n    };\n  } // 次の問題を表示するメソット\n\n\n  // // 初期のチャットを入れていく\n  // initChats() {\n  //   const initDataset = this.state.dataset[this.state.currentID];\n  //   const chat = {\n  //     text: initDataset.question,\n  //     type: \"question\",\n  //   };\n  //   const chats = this.state.chats;\n  //   chats.push(chat);\n  //   this.setState({\n  //     chats: chats,\n  //   });\n  // }\n  // // 初期の回答と質問を入力するメソットを作成する\n  // initAnswer = () => {\n  //   const initDataset = this.state.dataset[this.state.currentID]; //初期値のオブジェクト取得\n  //   const initAnswers = initDataset.answers; // オブジェクト配列が格納されている\n  //   this.setState({\n  //     answers: initAnswers,\n  //   });\n  // };\n  // renderが走った後に呼び出されるメソット\n  componentDidMount() {\n    this.selectAnswer('init');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","defaultDataset","App","Component","constructor","props","displayNextQuestion","nextQuestionId","initDataset","state","dataset","question","chat","text","type","chats","push","setState","answers","currentID","selectAnswer","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAO,WAAP;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,oBAAjC;AACA,OAAOC,cAAP,MAA2B,WAA3B,C,CAAuC;AAGvC;;AACA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,mBAXmB,GAWIC,cAAD,IAAoB;AACrC,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,cAAnB,CAApB;AACA,YAAMI,QAAQ,GAAGH,WAAW,CAACG,QAA7B;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAEF,QADK;AAEXG,QAAAA,IAAI,EAAE;AAFK,OAAb;AAIA,YAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AACAA,MAAAA,KAAK,CAACC,IAAN,CAAWJ,IAAX;AAEA,WAAKK,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEA,KADK;AAEZG,QAAAA,OAAO,EAAEV,WAAW,CAACU,OAFT;AAGZC,QAAAA,SAAS,EAAEZ;AAHC,OAAd;AAMJ,KA3BkB;;AAAA,SA8BnBa,YA9BmB,GA8BJ,CAACA,YAAD,EAAeb,cAAf,KAAkC;AAC/C;AACA,cAAQ,IAAR;AACE,aAAKA,cAAc,KAAK,MAAxB;AACE,eAAKD,mBAAL,CAAyBC,cAAzB;AACA;AACF;;AACA;AACE;AACA,gBAAMK,IAAI,GAAG;AACXC,YAAAA,IAAI,EAAEO,YADK;AAEXN,YAAAA,IAAI,EAAE;AAFK,WAAb;AAIA,gBAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AAEAA,UAAAA,KAAK,CAACC,IAAN,CAAWJ,IAAX;AACA,eAAKK,QAAL,CAAc;AACZF,YAAAA,KAAK,EAAEA;AADK,WAAd,EATF,CAYE;;AACA,eAAKT,mBAAL,CAAyBC,cAAzB;AACA;AAnBJ;AAqBD,KArDkB;;AAEjB,SAAKE,KAAL,GAAa;AACXS,MAAAA,OAAO,EAAE,EADE;AAEXH,MAAAA,KAAK,EAAE,EAFI;AAGXI,MAAAA,SAAS,EAAE,MAHA;AAIXT,MAAAA,OAAO,EAAET;AAJE,KAAb;AAMD,GAT8C,CAW/C;;;AA6CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAoB,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkB,MAAlB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWM,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWS,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AA/F8C","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\nimport defaultDataset from \"./dataset\" //データベースの値をこちらでインポートする\n\n\n// クラスコンポーネントで一度作成する\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: defaultDataset,\n    };\n  }\n\n  // 次の問題を表示するメソット\n  displayNextQuestion = (nextQuestionId) => {\n       const initDataset = this.state.dataset[nextQuestionId];\n       const question = initDataset.question;\n       const chat = {\n         text: question,\n         type: \"question\",\n       };\n       const chats = this.state.chats;\n       chats.push(chat);\n\n       this.setState({\n         chats: chats,\n         answers: initDataset.answers,\n         currentID: nextQuestionId\n       });\n\n  };\n\n  // 回答クリック時のメソット\n  selectAnswer = (selectAnswer, nextQuestionId) => {\n    // 選択肢は複数あるので、switch文での記述を行う\n    switch (true) {\n      case nextQuestionId === \"init\":\n        this.displayNextQuestion(nextQuestionId)\n        break;\n      // initのだった場合の処理を記述する\n      default:\n        // クリックされた値をchatsに追加する\n        const chat = {\n          text: selectAnswer,\n          type: \"answer\",\n        };\n        const chats = this.state.chats;\n\n        chats.push(chat);\n        this.setState({\n          chats: chats,\n        });\n        // 次の質問文をchatsに追加する(メソットの呼び出し)\n        this.displayNextQuestion(nextQuestionId);\n        break\n    }\n  };\n\n  // // 初期のチャットを入れていく\n\n  // initChats() {\n  //   const initDataset = this.state.dataset[this.state.currentID];\n  //   const chat = {\n  //     text: initDataset.question,\n  //     type: \"question\",\n  //   };\n  //   const chats = this.state.chats;\n  //   chats.push(chat);\n\n  //   this.setState({\n  //     chats: chats,\n  //   });\n  // }\n\n  // // 初期の回答と質問を入力するメソットを作成する\n  // initAnswer = () => {\n  //   const initDataset = this.state.dataset[this.state.currentID]; //初期値のオブジェクト取得\n  //   const initAnswers = initDataset.answers; // オブジェクト配列が格納されている\n  //   this.setState({\n  //     answers: initAnswers,\n  //   });\n  // };\n\n  // renderが走った後に呼び出されるメソット\n  componentDidMount() {\n      this.selectAnswer('init');\n  }\n\n  render() {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers} />\n        </div>\n      </section>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}