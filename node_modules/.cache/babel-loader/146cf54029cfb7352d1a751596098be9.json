{"ast":null,"code":"import _regeneratorRuntime from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import'./App.css';import'./assets/styles/style.css';import{AnswersList,Chats}from\"./components/index\";// import defaultDataset from \"./dataset\" \n//データベースの値をこちらでインポートする\nimport{db}from\"./firebase/index\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),answers=_useState2[0],setAnswers=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chats=_useState4[0],setChats=_useState4[1];var _useState5=useState(\"init\"),_useState6=_slicedToArray(_useState5,2),currentId=_useState6[0],setCurrentId=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),dataset=_useState8[0],setDataset=_useState8[1];var displayNextQuestion=function displayNextQuestion(nextQuestionId,nextDataset){addChats({text:nextDataset.question,type:\"question\"});setAnswers(nextDataset.answers);setCurrentId(nextQuestionId);};var selectAnswer=function selectAnswer(_selectAnswer,nextQuestionId){switch(true){case nextQuestionId===\"init\":displayNextQuestion(nextQuestionId,dataset[nextQuestionId]);break;// urlできた場合の実装\ncase /^https:*/.test(nextQuestionId):var a=document.createElement(\"a\");a.href=nextQuestionId;a.target=\"_blank\";a.click();break;default:addChats({text:_selectAnswer,type:\"answer\"});// 遅延時間を使って回答するようにする(2つの引数を取れる)\nsetTimeout(function(){return displayNextQuestion(nextQuestionId,dataset[nextQuestionId]);},700);break;}};// chatに値を追加するメソット\nvar addChats=function addChats(chat){setChats(function(prevChats){return[].concat(_toConsumableArray(prevChats),[chat]);});};useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var initDataset;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:initDataset={};_context.next=3;return db.collection(\"questions\").get().then(function(snapshots){snapshots.forEach(function(doc){var id=doc.id;var data=doc.data();initDataset[id]=data;});});case 3:// setDatasetで先ほどの上記の値を変更する\nsetDataset(initDataset);// 以下では質問を追加する実装を施す\ndisplayNextQuestion(currentId,initDataset[currentId]);case 5:case\"end\":return _context.stop();}}},_callee);}))();},[]);// スクロール時の挙動\nuseEffect(function(){var scrollAre=document.getElementById(\"scrollarea\");if(scrollAre){scrollAre.scrollTop=scrollAre.scrollHeight;console.log(scrollAre.scrollTop);console.log(scrollAre.scrollHeight);}});return/*#__PURE__*/React.createElement(\"section\",{className:\"c-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"c-box\"},/*#__PURE__*/React.createElement(Chats,{chats:chats}),/*#__PURE__*/React.createElement(AnswersList,{answers:answers,select:selectAnswer})));};export default App;","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","db","App","answers","setAnswers","chats","setChats","currentId","setCurrentId","dataset","setDataset","displayNextQuestion","nextQuestionId","nextDataset","addChats","text","question","type","selectAnswer","test","a","document","createElement","href","target","click","setTimeout","chat","prevChats","initDataset","collection","get","then","snapshots","forEach","doc","id","data","scrollAre","getElementById","scrollTop","scrollHeight","console","log"],"mappings":"6gBACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,WAApC,KAAsD,OAAtD,CACA,MAAO,WAAP,CACA,MAAO,2BAAP,CACA,OAAQC,WAAR,CAAqBC,KAArB,KAAiC,oBAAjC,CACA;AACA;AACA,OAASC,EAAT,KAAmB,kBAAnB,CAIA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eAEcN,QAAQ,CAAC,EAAD,CAFtB,wCAETO,OAFS,eAEAC,UAFA,8BAGUR,QAAQ,CAAC,EAAD,CAHlB,yCAGTS,KAHS,eAGFC,QAHE,8BAIkBV,QAAQ,CAAC,MAAD,CAJ1B,yCAITW,SAJS,eAIEC,YAJF,8BAKcZ,QAAQ,CAAC,EAAD,CALtB,yCAKTa,OALS,eAKAC,UALA,eAShB,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,cAAD,CAAiBC,WAAjB,CAAiC,CAC3DC,QAAQ,CAAC,CACPC,IAAI,CAAEF,WAAW,CAACG,QADX,CAEPC,IAAI,CAAE,UAFC,CAAD,CAAR,CAKAb,UAAU,CAACS,WAAW,CAACV,OAAb,CAAV,CACAK,YAAY,CAACI,cAAD,CAAZ,CACD,CARD,CAUA,GAAMM,CAAAA,YAAY,CAAG,sBAACA,aAAD,CAAeN,cAAf,CAAkC,CACrD,OAAQ,IAAR,EACE,IAAKA,CAAAA,cAAc,GAAK,MAAxB,CACED,mBAAmB,CAACC,cAAD,CAAiBH,OAAO,CAACG,cAAD,CAAxB,CAAnB,CACA,MAEF;AACA,IAAK,YAAWO,IAAX,CAAgBP,cAAhB,CAAL,CACE,GAAMQ,CAAAA,CAAC,CAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV,CACAF,CAAC,CAACG,IAAF,CAASX,cAAT,CACAQ,CAAC,CAACI,MAAF,CAAW,QAAX,CACAJ,CAAC,CAACK,KAAF,GACA,MAEF,QACEX,QAAQ,CAAC,CACLC,IAAI,CAAEG,aADD,CAELD,IAAI,CAAE,QAFD,CAAD,CAAR,CAIA;AAEAS,UAAU,CAAC,iBAAMf,CAAAA,mBAAmB,CAACC,cAAD,CAAiBH,OAAO,CAACG,cAAD,CAAxB,CAAzB,EAAD,CAAqE,GAArE,CAAV,CAEA,MAtBJ,CAwBD,CAzBD,CA2BA;AAEA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACa,IAAD,CAAQ,CACvBrB,QAAQ,CAAC,SAAAsB,SAAS,CAAE,CAClB,mCAAUA,SAAV,GAAqBD,IAArB,GACD,CAFO,CAAR,CAGD,CAJD,CAOA9B,SAAS,CAAC,UAAI,CACV,wDAAC,mJACOgC,WADP,CACqB,EADrB,uBAEK5B,CAAAA,EAAE,CACL6B,UADG,CACQ,WADR,EAEHC,GAFG,GAGHC,IAHG,CAGE,SAACC,SAAD,CAAe,CACnBA,SAAS,CAACC,OAAV,CAAkB,SAACC,GAAD,CAAS,CACzB,GAAMC,CAAAA,EAAE,CAAGD,GAAG,CAACC,EAAf,CACA,GAAMC,CAAAA,IAAI,CAAGF,GAAG,CAACE,IAAJ,EAAb,CACAR,WAAW,CAACO,EAAD,CAAX,CAAkBC,IAAlB,CACD,CAJD,EAKD,CATG,CAFL,QAYD;AACA3B,UAAU,CAACmB,WAAD,CAAV,CACA;AACAlB,mBAAmB,CAACJ,SAAD,CAAYsB,WAAW,CAACtB,SAAD,CAAvB,CAAnB,CAfC,sDAAD,KAiBH,CAlBQ,CAkBN,EAlBM,CAAT,CAoBA;AAEAV,SAAS,CAAC,UAAI,CACV,GAAMyC,CAAAA,SAAS,CAAGjB,QAAQ,CAACkB,cAAT,CAAwB,YAAxB,CAAlB,CACA,GAAID,SAAJ,CAAe,CACbA,SAAS,CAACE,SAAV,CAAsBF,SAAS,CAACG,YAAhC,CACAC,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACE,SAAtB,EACAE,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACG,YAAtB,EACD,CACJ,CAPQ,CAAT,CASA,mBACI,+BAAS,SAAS,CAAC,WAAnB,eACE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,KAAD,EAAO,KAAK,CAAEpC,KAAd,EADF,cAEE,oBAAC,WAAD,EACE,OAAO,CAAEF,OADX,CAEE,MAAM,CAAEe,YAFV,EAFF,CADF,CADJ,CAWD,CAjGD,CAmGA,cAAehB,CAAAA,GAAf","sourcesContent":["\nimport React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\n// import defaultDataset from \"./dataset\" \n//データベースの値をこちらでインポートする\nimport { db } from \"./firebase/index\";\n\n\n\nconst App = () => {\n\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState(\"init\");\n  const [dataset, setDataset] = useState({});\n\n\n \n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n    addChats({\n      text: nextDataset.question,\n      type: \"question\",\n    }\n    )\n    setAnswers(nextDataset.answers)\n    setCurrentId(nextQuestionId)\n  };\n\n  const selectAnswer = (selectAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === \"init\":\n        displayNextQuestion(nextQuestionId, dataset[nextQuestionId]);\n        break;\n\n      // urlできた場合の実装\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement(\"a\");\n        a.href = nextQuestionId;\n        a.target = \"_blank\";\n        a.click();\n        break;\n\n      default:\n        addChats({\n            text: selectAnswer,\n            type: \"answer\"\n        })\n        // 遅延時間を使って回答するようにする(2つの引数を取れる)\n\n        setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 700);\n\n        break;\n    }\n  };\n\n  // chatに値を追加するメソット\n\n  const addChats = (chat)=>{\n    setChats(prevChats=>{\n      return[...prevChats, chat]\n    })\n  }\n\n\n  useEffect(()=>{\n      (async () => {\n        const initDataset = {};\n      await db\n        .collection(\"questions\")\n        .get()\n        .then((snapshots) => {\n          snapshots.forEach((doc) => {\n            const id = doc.id;\n            const data = doc.data();\n            initDataset[id] = data;\n          });\n        });\n      // setDatasetで先ほどの上記の値を変更する\n      setDataset(initDataset);\n      // 以下では質問を追加する実装を施す\n      displayNextQuestion(currentId, initDataset[currentId])\n    })();\n  }, [])\n\n  // スクロール時の挙動\n\n  useEffect(()=>{\n      const scrollAre = document.getElementById(\"scrollarea\");\n      if (scrollAre) {\n        scrollAre.scrollTop = scrollAre.scrollHeight;\n        console.log(scrollAre.scrollTop);\n        console.log(scrollAre.scrollHeight);\n      }\n  })\n\n  return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={chats} />\n          <AnswersList\n            answers={answers}\n            select={selectAnswer}\n          />\n        </div>\n      </section>\n    );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}