{"ast":null,"code":"var _jsxFileName = \"/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nimport defaultDataset from \"./dataset\"; //データベースの値をこちらでインポートする\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayNextQuestion = nextQuestionId => {\n      const chats = this.state.chats;\n      chats.push({\n        text: this.state.dataset[nextQuestionId].question,\n        type: \"question\"\n      });\n      this.setState({\n        answers: this.state.dataset[nextQuestionId].answers,\n        chats: chats,\n        currentID: nextQuestionId\n      });\n    };\n\n    this.selectAnswer = (selectAnswer, nextQuestionId) => {\n      switch (true) {\n        case nextQuestionId === \"init\":\n          this.displayNextQuestion(nextQuestionId);\n          break;\n        // urlできた場合の実装\n\n        case /^https:*/.test(nextQuestionId):\n          const a = document.createElement(\"a\");\n          a.href = nextQuestionId;\n          a.target = \"_blank\";\n          a.click();\n        // contactだった場合にもーだるウィ開く\n\n        case nextQuestionId === \"contact\":\n          this.handleClickOpen();\n          break;\n\n        default:\n          const chat = {\n            text: selectAnswer,\n            type: \"answer\"\n          };\n          const chats = this.state.chats;\n          chats.push(chat);\n          this.setState({\n            chats: chats\n          }); // 遅延時間を使って回答するようにする(2つの引数を取れる)\n\n          setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n          break;\n      }\n    };\n\n    this.initDataset = dataset => {\n      this.setState({\n        dataset: dataset\n      });\n    };\n\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: defaultDataset,\n      open: false\n    };\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n  }\n\n  initChats() {\n    const initDataset = this.state.dataset[this.state.currentID];\n    const chat = {\n      text: initDataset.question,\n      type: \"question\"\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n    this.setState({\n      chats: chats\n    });\n  }\n\n  componentDidMount() {\n    this.initDataset(dataset);\n    const initAnswer = \"\";\n    this.selectAnswer(initAnswer, this.state.currentID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      select: this.selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormDialog, {\n      open: this.state.open,\n      handleClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","defaultDataset","App","Component","constructor","props","displayNextQuestion","nextQuestionId","chats","state","push","text","dataset","question","type","setState","answers","currentID","selectAnswer","test","a","document","createElement","href","target","click","handleClickOpen","chat","setTimeout","initDataset","open","bind","handleClose","initChats","componentDidMount","initAnswer","render"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\nimport defaultDataset from \"./dataset\" \n//データベースの値をこちらでインポートする\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: defaultDataset,\n      open: false,\n    };\n\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n  }\n\n  displayNextQuestion = (nextQuestionId) => {\n    const chats = this.state.chats;\n    chats.push({\n      text: this.state.dataset[nextQuestionId].question,\n      type: \"question\",\n    });\n\n    this.setState({\n      answers: this.state.dataset[nextQuestionId].answers,\n      chats: chats,\n      currentID: nextQuestionId,\n    });\n  };\n\n  selectAnswer = (selectAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === \"init\":\n        this.displayNextQuestion(nextQuestionId);\n        break;\n      // urlできた場合の実装\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement(\"a\");\n        a.href = nextQuestionId;\n        a.target = \"_blank\";\n        a.click();\n\n      // contactだった場合にもーだるウィ開く\n      case nextQuestionId === \"contact\":\n        this.handleClickOpen();\n        break;\n\n      default:\n        const chat = {\n          text: selectAnswer,\n          type: \"answer\",\n        };\n\n        const chats = this.state.chats;\n        chats.push(chat);\n\n        this.setState({\n          chats: chats,\n        });\n        // 遅延時間を使って回答するようにする(2つの引数を取れる)\n        setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n\n        break;\n    }\n  };\n\n \n\n  initChats() {\n    const initDataset = this.state.dataset[this.state.currentID];\n    const chat = {\n      text: initDataset.question,\n      type: \"question\",\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n\n    this.setState({\n      chats: chats,\n    });\n  }\n\n  initDataset = (dataset) => {\n    this.setState({ dataset: dataset });\n  };\n\n  componentDidMount() {\n   \n      \n      this.initDataset(dataset);\n      const initAnswer = \"\";\n      this.selectAnswer(initAnswer, this.state.currentID);\n  }\n\n \n\n  render() {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList\n            answers={this.state.answers}\n            select={this.selectAnswer}\n          />\n          <FormDialog open={this.state.open} handleClose={this.handleClose} />\n        </div>\n      </section>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}