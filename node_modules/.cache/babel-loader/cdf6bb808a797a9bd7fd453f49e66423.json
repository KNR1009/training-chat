{"ast":null,"code":"import _regeneratorRuntime from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/itoukazunari/Desktop/React/training-chat/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState,useEffect,useCallback}from'react';import'./App.css';import'./assets/styles/style.css';import{AnswersList,Chats}from\"./components/index\";// import defaultDataset from \"./dataset\" \n//データベースの値をこちらでインポートする\nimport{db}from\"./firebase/index\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.displayNextQuestion=function(nextQuestionId){var chats=_this.state.chats;chats.push({text:_this.state.dataset[nextQuestionId].question,type:\"question\"});_this.setState({answers:_this.state.dataset[nextQuestionId].answers,chats:chats,currentID:nextQuestionId});};_this.selectAnswer=function(selectAnswer,nextQuestionId){switch(true){case nextQuestionId===\"init\":_this.displayNextQuestion(nextQuestionId);break;// urlできた場合の実装\ncase /^https:*/.test(nextQuestionId):var a=document.createElement(\"a\");a.href=nextQuestionId;a.target=\"_blank\";a.click();default:var chat={text:selectAnswer,type:\"answer\"};var chats=_this.state.chats;chats.push(chat);_this.setState({chats:chats});// 遅延時間を使って回答するようにする(2つの引数を取れる)\nsetTimeout(function(){return _this.displayNextQuestion(nextQuestionId);},500);break;}};_this.state={answers:[],chats:[],currentID:\"init\",dataset:{},open:false};_this.selectAnswer=_this.selectAnswer.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"initChats\",value:function initChats(){var initDataset=this.state.dataset[this.state.currentID];var chat={text:initDataset.question,type:\"question\"};var chats=this.state.chats;chats.push(chat);this.setState({chats:chats});}// datasetの値を変更するメソット\n},{key:\"initDataset\",value:function initDataset(dataset){this.setState({dataset:dataset});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var dataset,initAnswer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dataset=_this2.state.dataset;_context.next=3;return db.collection(\"questions\").get().then(function(snapshots){snapshots.forEach(function(doc){var id=doc.id;var data=doc.data();dataset[id]=data;});});case 3:_this2.initDataset(dataset);initAnswer=\"\";_this2.selectAnswer(initAnswer,_this2.state.currentID);case 6:case\"end\":return _context.stop();}}},_callee);}))();}// スクロール時の挙動\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var scrollAre=document.getElementById(\"scrollarea\");if(scrollAre){scrollAre.scrollTop=scrollAre.scrollHeight;console.log(scrollAre.scrollTop);console.log(scrollAre.scrollHeight);}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"section\",{className:\"c-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"c-box\"},/*#__PURE__*/React.createElement(Chats,{chats:this.state.chats}),/*#__PURE__*/React.createElement(AnswersList,{answers:this.state.answers,select:this.selectAnswer})));}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/React/training-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","db","App","props","displayNextQuestion","nextQuestionId","chats","state","push","text","dataset","question","type","setState","answers","currentID","selectAnswer","test","a","document","createElement","href","target","click","chat","setTimeout","open","bind","initDataset","collection","get","then","snapshots","forEach","doc","id","data","initAnswer","scrollAre","getElementById","scrollTop","scrollHeight","console","log","Component"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\n// import defaultDataset from \"./dataset\" \n//データベースの値をこちらでインポートする\nimport { db } from \"./firebase/index\";\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: \"init\",\n      dataset: {},\n      open: false,\n    };\n\n    this.selectAnswer = this.selectAnswer.bind(this);\n  }\n\n  displayNextQuestion = (nextQuestionId) => {\n    const chats = this.state.chats;\n    chats.push({\n      text: this.state.dataset[nextQuestionId].question,\n      type: \"question\",\n    });\n\n    this.setState({\n      answers: this.state.dataset[nextQuestionId].answers,\n      chats: chats,\n      currentID: nextQuestionId,\n    });\n  };\n\n  selectAnswer = (selectAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === \"init\":\n        this.displayNextQuestion(nextQuestionId);\n        break;\n\n      // urlできた場合の実装\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement(\"a\");\n        a.href = nextQuestionId;\n        a.target = \"_blank\";\n        a.click();\n\n      default:\n        const chat = {\n          text: selectAnswer,\n          type: \"answer\",\n        };\n\n        const chats = this.state.chats;\n        chats.push(chat);\n\n        this.setState({\n          chats: chats,\n        });\n        // 遅延時間を使って回答するようにする(2つの引数を取れる)\n        setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n\n        break;\n    }\n  };\n\n  initChats() {\n    const initDataset = this.state.dataset[this.state.currentID];\n    const chat = {\n      text: initDataset.question,\n      type: \"question\",\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n\n    this.setState({\n      chats: chats,\n    });\n  }\n\n  // datasetの値を変更するメソット\n  initDataset(dataset) {\n    this.setState({\n      dataset: dataset,\n    });\n  }\n\ncomponentDidMount() {\n     (async () => {\n       const dataset = this.state.dataset;\n       await db.collection(\"questions\").get().then((snapshots) => {\n           snapshots.forEach((doc) => {\n\n             const id = doc.id;\n             const data = doc.data();\n             dataset[id] = data;\n           });\n         });\n       this.initDataset(dataset);\n       const initAnswer = \"\";\n       this.selectAnswer(initAnswer, this.state.currentID);\n     })();\n  \n  }\n\n  // スクロール時の挙動\n  componentDidUpdate() {\n    const scrollAre = document.getElementById(\"scrollarea\");\n    if (scrollAre) {\n      scrollAre.scrollTop = scrollAre.scrollHeight;\n      console.log(scrollAre.scrollTop);\n      console.log(scrollAre.scrollHeight);\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList\n            answers={this.state.answers}\n            select={this.selectAnswer}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}